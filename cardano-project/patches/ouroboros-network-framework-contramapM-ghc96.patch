--- a/src/Simulation/Network/Snocket.hs
+++ b/src/Simulation/Network/Snocket.hs
@@ -56,7 +56,7 @@
 import Control.Monad.Class.MonadTime.SI
 import Control.Monad.Class.MonadTimer.SI
 import Control.Monad.ST.Unsafe (unsafeIOToST)
-import Control.Tracer (Tracer, contramap, traceWith)
+import Control.Tracer (Tracer, contramap, traceWith)
 
 import GHC.IO.Exception
 
@@ -830,8 +830,5 @@
                -> SnocketTrace m (TestAddress addr)
                -> m ()
     traceWith' fd =
-      let tr' :: Tracer m (SnocketTrace m (TestAddress addr))
-          tr' = (\ev -> (\a b -> WithAddr (hush a)
-                                          (hush b) ev)
-                    <$> getLocalAddrM  fd
-                    <*> getRemoteAddrM fd)
-                `contramapM` tr
-      in traceWith tr'
+      \ev -> do
+        a <- getLocalAddrM fd
+        b <- getRemoteAddrM fd
+        traceWith tr (WithAddr (hush a) (hush b) ev)
 
     --
 
@@ -850,3 +847,7 @@
     --
 
     --
+
+-- Define contramapM locally since it was removed from contra-tracer 0.2.0+
+contramapM :: Monad m => (a -> m b) -> Tracer m b -> Tracer m a
+contramapM f (Tracer trace) = Tracer $ \a -> f a >>= trace
+